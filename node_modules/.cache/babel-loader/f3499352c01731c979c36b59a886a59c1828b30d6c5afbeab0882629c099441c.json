{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachin singh\\\\OneDrive\\\\Desktop\\\\MDB\\\\Frontend\\\\src\\\\Component\\\\Blogs\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostDetail() {\n  _s();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  useEffect(() => {\n    const token = sessionStorage.getItem('accessToken');\n    const fetchPosts = async () => {\n      try {\n        let url = `http://127.0.0.1:8000/postDetail:${id}`;\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          }\n        });\n        const data = await response.json();\n        if (data.status === 'Success') {\n          console.log(data);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPosts(); // Fetch posts based on the category in the URL or fetch all posts.\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"This detail card page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PostDetail, \"WTkzVJt056/9vEFrj9nX40yNcDw=\", false, function () {\n  return [useParams];\n});\n_c = PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useParams","jsxDEV","_jsxDEV","PostDetail","_s","id","console","log","token","sessionStorage","getItem","fetchPosts","url","response","fetch","method","headers","Authorization","data","json","status","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sachin singh/OneDrive/Desktop/MDB/Frontend/src/Component/Blogs/PostDetail.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nexport default function PostDetail() {\r\n\r\n    const {id} = useParams()\r\n    console.log(id)\r\n\r\n\r\n    useEffect(() => {\r\n        const token = sessionStorage.getItem('accessToken');\r\n    \r\n        const fetchPosts = async () => {\r\n          try {\r\n            let url = `http://127.0.0.1:8000/postDetail:${id}`;\r\n    \r\n            const response = await fetch(url, {\r\n              method: 'GET',\r\n              headers: {\r\n                Authorization: token,\r\n              },\r\n            });\r\n    \r\n            const data = await response.json();\r\n    \r\n            if (data.status === 'Success') {\r\n              console.log(data)\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        }\r\n    \r\n        fetchPosts(); // Fetch posts based on the category in the URL or fetch all posts.\r\n    \r\n      }, [id]);\r\n    \r\n\r\n\r\n  return (\r\n    <div>\r\n      This detail card page\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEjC,MAAM;IAACC;EAAE,CAAC,GAAGL,SAAS,CAAC,CAAC;EACxBM,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;EAGfN,SAAS,CAAC,MAAM;IACZ,MAAMS,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;IAEnD,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAIC,GAAG,GAAI,oCAAmCP,EAAG,EAAC;QAElD,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;UAChCG,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAET;UACjB;QACF,CAAC,CAAC;QAEF,MAAMU,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAElC,IAAID,IAAI,CAACE,MAAM,KAAK,SAAS,EAAE;UAC7Bd,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC;QACnB;MACF,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdf,OAAO,CAACe,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDV,UAAU,CAAC,CAAC,CAAC,CAAC;EAEhB,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAIZ,oBACEH,OAAA;IAAAoB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACtB,EAAA,CAzCuBD,UAAU;EAAA,QAEjBH,SAAS;AAAA;AAAA2B,EAAA,GAFFxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}