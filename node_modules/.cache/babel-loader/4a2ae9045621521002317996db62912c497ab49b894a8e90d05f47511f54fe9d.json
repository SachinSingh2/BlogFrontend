{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachin singh\\\\OneDrive\\\\Desktop\\\\BlogWebsite\\\\Frontend\\\\src\\\\Component\\\\Blogs\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostsCard from './PostsCard';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  // This component is being shown at home page where we can see a all the Blogs.\n\n  const [posts, setPosts] = useState([]);\n  const [searchParams] = useSearchParams();\n  const searchCategory = searchParams.get('category');\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  // This function will fetch all the blogs from the database as soon as the page refreshed means at render.\n  useEffect(() => {\n    const token = sessionStorage.getItem('accessToken');\n    setLoading(true);\n    const fetchPosts = async category => {\n      try {\n        let url = 'http://127.0.0.1:8000/Blog/Post';\n        if (category) {\n          url = `http://127.0.0.1:8000/Blog/Post?category=${category}`;\n        }\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          }\n        });\n        setLoading(false);\n        const data = await response.json();\n        if (data.status === 'Success') {\n          setPosts(data.post);\n          // console.log(data)\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPosts(searchCategory); // Fetch posts based on the category in the URL or fetch all posts.\n  }, [searchCategory]);\n\n  // ---------------------------------------------SortBy-------------------------------------\n\n  const handleOnFilter = async sortBy => {\n    try {\n      // console.log(sortBy);\n      if (searchCategory == null) {\n        const token = sessionStorage.getItem(\"accessToken\");\n        setLoading(true);\n        let sortUrl = `http://127.0.0.1:8000/Blog/Filter/${sortBy}`;\n        const res = await fetch(sortUrl, {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          }\n        });\n        const data = await res.json();\n        setLoading(false);\n        if (data.status === \"Success\") {\n          setPosts(data.data);\n        }\n      } else {\n        // --------------------------------if there is category \n        const token = sessionStorage.getItem(\"accessToken\");\n        setLoading(true);\n        let sortUrl = `http://127.0.0.1:8000/Blog/Filter/${sortBy}/${searchCategory}`;\n        const res = await fetch(sortUrl, {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          }\n        });\n        const data = await res.json();\n        setLoading(false);\n        if (data.status === \"Success\") {\n          setPosts(data.data);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"50px\",\n        marginTop: \"150px\"\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-2xl fa-spinner fa-spin\",\n        style: {\n          color: \"#111212\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 90\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 16\n    }, this) : posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"end\"\n        },\n        className: \"FilterBox  p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary dropdown-toggle\",\n            type: \"button\",\n            \"data-bs-toggle\": \"dropdown\",\n            \"aria-expanded\": \"false\",\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                handleOnFilter('asc');\n              },\n              style: {\n                cursor: \"pointer\"\n              },\n              className: \"p-2 border\",\n              children: \"Newest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => {\n                handleOnFilter(\"desc\");\n              },\n              style: {\n                cursor: \"pointer\"\n              },\n              className: \"p-2 border\",\n              children: \"Oldest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), posts.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(PostsCard, {\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"start\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-5\",\n        children: \"No Current Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Post, \"MD/SOSAw6sQwTlO06EpRTr1x2ls=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","PostsCard","useNavigate","useSearchParams","Link","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_s","posts","setPosts","searchParams","searchCategory","get","navigate","loading","setLoading","token","sessionStorage","getItem","fetchPosts","category","url","response","fetch","method","headers","Authorization","data","json","status","post","error","console","handleOnFilter","sortBy","sortUrl","res","children","style","textAlign","fontSize","marginTop","className","color","fileName","_jsxFileName","lineNumber","columnNumber","length","type","onClick","cursor","map","index","display","justifyContent","_c","$RefreshReg$"],"sources":["C:/Users/Sachin singh/OneDrive/Desktop/BlogWebsite/Frontend/src/Component/Blogs/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostsCard from './PostsCard';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nexport default function Post() {\r\n\r\n  // This component is being shown at home page where we can see a all the Blogs.\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [searchParams] = useSearchParams();\r\n  const searchCategory = searchParams.get('category');\r\n  const navigate = useNavigate()\r\n  const [loading , setLoading] = useState(false)\r\n\r\n\r\n  // This function will fetch all the blogs from the database as soon as the page refreshed means at render.\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('accessToken');\r\n    setLoading(true)\r\n    const fetchPosts = async (category) => {\r\n      try {\r\n        let url = 'http://127.0.0.1:8000/Blog/Post';\r\n\r\n        if (category) {\r\n          url = `http://127.0.0.1:8000/Blog/Post?category=${category}`;\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n\r\n        setLoading(false)\r\n        const data = await response.json();\r\n\r\n\r\n\r\n        if (data.status === 'Success') {\r\n          setPosts(data.post);\r\n          // console.log(data)\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchPosts(searchCategory); // Fetch posts based on the category in the URL or fetch all posts.\r\n\r\n  }, [searchCategory ]);\r\n\r\n\r\n  // ---------------------------------------------SortBy-------------------------------------\r\n\r\n  const handleOnFilter = async (sortBy) => {\r\n\r\n    \r\n    try {\r\n      // console.log(sortBy);\r\n      if(searchCategory==null){\r\n\r\n        const token = sessionStorage.getItem(\"accessToken\");\r\n        setLoading(true)\r\n  \r\n        let sortUrl = `http://127.0.0.1:8000/Blog/Filter/${sortBy}`\r\n  \r\n  \r\n        const res = await fetch(sortUrl, {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n  \r\n    \r\n        const data = await res.json();\r\n  \r\n        setLoading(false)\r\n    \r\n        if (data.status === \"Success\") {\r\n          setPosts(data.data);\r\n        }\r\n\r\n      }else{\r\n\r\n        // --------------------------------if there is category \r\n        const token = sessionStorage.getItem(\"accessToken\");\r\n        setLoading(true)\r\n  \r\n        let sortUrl = `http://127.0.0.1:8000/Blog/Filter/${sortBy}/${searchCategory}`\r\n  \r\n  \r\n        const res = await fetch(sortUrl, {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n  \r\n    \r\n        const data = await res.json();\r\n  \r\n        setLoading(false)\r\n    \r\n        if (data.status === \"Success\") {\r\n          setPosts(data.data);\r\n        }\r\n      }\r\n      \r\n     \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n    {/* Filter Box */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    {loading ? <div style={{textAlign:\"center\" , fontSize:\"50px\" , marginTop:\"150px\"}} > <i className=\"fa-solid fa-2xl fa-spinner fa-spin\" style={{color: \"#111212\"}}></i> </div>  :  posts.length > 0 ? (\r\n        <div className=\"row \">\r\n\r\n\r\n          \r\n    <div style={{textAlign:\"end\"}} className=\"FilterBox  p-3\">\r\n\r\n<div className=\"dropdown\">\r\n<button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\nFilter\r\n</button>\r\n<ul className=\"dropdown-menu\">\r\n<li onClick={()=>{handleOnFilter('asc')}} style={{cursor:\"pointer\"}} className='p-2 border' >Newest</li>\r\n<li  onClick={()=>{handleOnFilter(\"desc\")}} style={{cursor:\"pointer\"}} className='p-2 border' >Oldest</li>\r\n\r\n</ul>\r\n</div>\r\n\r\n</div>\r\n\r\n       {posts.map((data, index) => (\r\n            <div className=\"col-md-4\" key={index}>\r\n                <PostsCard data={data} /> \r\n            </div>\r\n          ))}\r\n\r\n\r\n        </div>\r\n      ) : (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"start\" }}>\r\n          <h1 className='my-5'>No Current Blogs</h1>\r\n        </div>\r\n      )} \r\n\r\n\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}