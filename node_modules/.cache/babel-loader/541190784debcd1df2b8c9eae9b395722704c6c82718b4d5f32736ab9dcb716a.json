{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachin singh\\\\OneDrive\\\\Desktop\\\\BlogWebsite\\\\Frontend\\\\src\\\\Component\\\\Blogs\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostsCard from './PostsCard';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post({\n  info\n}) {\n  _s();\n  // This component is being shown at home page where we can see a all the Blogs.\n\n  const [posts, setPosts] = useState([]);\n  const [searchParams] = useSearchParams();\n  const searchCategory = searchParams.get('category');\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n\n  // This function will fetch all the blogs from the database as soon as the page refreshed means at render.\n  useEffect(() => {\n    const token = sessionStorage.getItem('accessToken');\n    setLoading(true);\n    const fetchPosts = async category => {\n      try {\n        let url = 'https://blogbackend-jpc6.onrender.com/Blog/Post';\n        if (category) {\n          url = `https://blogbackend-jpc6.onrender.com/Blog/Post?category=${category}`;\n        }\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          }\n        });\n        setLoading(false);\n        const data = await response.json();\n        if (data.msg === \"jwt expired\") {\n          alert(\"Please login again session expired\");\n          navigate('/login');\n        }\n        if (data.status === 'Success') {\n          setPosts(data.post);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPosts(searchCategory); // Fetch posts based on the category in the URL or fetch all posts.\n  }, [searchCategory]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: posts.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `postDetail/${data._id}`,\n          children: /*#__PURE__*/_jsxDEV(PostsCard, {\n            data: info\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"start\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-5\",\n        children: \"No Current Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Post, \"MD/SOSAw6sQwTlO06EpRTr1x2ls=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","PostsCard","useNavigate","useSearchParams","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","info","_s","posts","setPosts","searchParams","searchCategory","get","navigate","loading","setLoading","token","sessionStorage","getItem","fetchPosts","category","url","response","fetch","method","headers","Authorization","data","json","msg","alert","status","post","error","console","children","length","className","map","index","to","_id","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Sachin singh/OneDrive/Desktop/BlogWebsite/Frontend/src/Component/Blogs/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostsCard from './PostsCard';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Post({info}) {\r\n\r\n  // This component is being shown at home page where we can see a all the Blogs.\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [searchParams] = useSearchParams();\r\n  const searchCategory = searchParams.get('category');\r\n  const navigate = useNavigate()\r\n  const [loading , setLoading] = useState(false)\r\n\r\n\r\n  // This function will fetch all the blogs from the database as soon as the page refreshed means at render.\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('accessToken');\r\n\r\n    setLoading(true)\r\n    const fetchPosts = async (category) => {\r\n      try {\r\n        let url = 'https://blogbackend-jpc6.onrender.com/Blog/Post';\r\n\r\n        if (category) {\r\n          url = `https://blogbackend-jpc6.onrender.com/Blog/Post?category=${category}`;\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n\r\n        setLoading(false)\r\n        const data = await response.json();\r\n\r\n        if(data.msg===\"jwt expired\"){\r\n          alert(\"Please login again session expired\")\r\n          navigate('/login')\r\n        }\r\n\r\n        if (data.status === 'Success') {\r\n          setPosts(data.post);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    fetchPosts(searchCategory); // Fetch posts based on the category in the URL or fetch all posts.\r\n\r\n  }, [searchCategory]);\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n      {posts.length > 0 ? (\r\n        <div className=\"row\">\r\n          {posts.map((data, index) => (\r\n            <div className=\"col-md-4\" key={index}>\r\n              <Link to={`postDetail/${data._id}`}>\r\n                <PostsCard data={info} /> \r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"start\" }}>\r\n          <h1 className='my-5'>No Current Blogs</h1>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}