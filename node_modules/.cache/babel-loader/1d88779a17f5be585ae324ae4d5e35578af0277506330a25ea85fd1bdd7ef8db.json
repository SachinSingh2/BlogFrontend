{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachin singh\\\\OneDrive\\\\Desktop\\\\MDB\\\\Frontend\\\\src\\\\Component\\\\Blogs\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostsCard from './PostsCard';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  const [Post, setPost] = useState([]);\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category');\n  useEffect(() => {\n    const token = sessionStorage.getItem('accessToken');\n    const query = {\n      category: category\n    }; // Create an object with the query parameter\n\n    const getAllPosts = async queryData => {\n      const data = await fetch('http://127.0.0.1:8000/Post', {\n        method: 'POST',\n        // Use POST method\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify(queryData) // Send the query parameter in the request body\n      });\n\n      const res = await data.json();\n      if (res.status === 'Success') {\n        setPost(res.post);\n      }\n      console.log(res.post);\n    };\n    getAllPosts(query);\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Post && Post.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: Post.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(PostsCard, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"start\"\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-5\",\n        children: \"No Current Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 91\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\n// {\n//   Post && Post.length > 0 ?  Post.map((data , index)=>{\n\n//     return (\n\n//     )\n\n//   }) : <h1>No Data Available</h1>\n// }\n_s(Post, \"AliY3NKaohUiglcIW+CfnDIr1H4=\", false, function () {\n  return [useSearchParams];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","PostsCard","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_s","setPost","searchParams","category","get","token","sessionStorage","getItem","query","getAllPosts","queryData","data","fetch","method","headers","body","JSON","stringify","res","json","status","post","console","log","children","length","className","map","index","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Sachin singh/OneDrive/Desktop/MDB/Frontend/src/Component/Blogs/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostsCard from './PostsCard';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Post() {\r\n\r\n  const [Post , setPost] = useState([])\r\n  const [searchParams] = useSearchParams()\r\n  const category = searchParams.get('category')\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('accessToken');\r\n    const query = { category: category }; // Create an object with the query parameter\r\n  \r\n    const getAllPosts = async (queryData) => {\r\n      const data = await fetch('http://127.0.0.1:8000/Post', {\r\n        method: 'POST', // Use POST method\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token,\r\n        },\r\n        body: JSON.stringify(queryData), // Send the query parameter in the request body\r\n      });\r\n  \r\n      const res = await data.json();\r\n      if (res.status === 'Success') {\r\n        setPost(res.post);\r\n      }\r\n      console.log(res.post);\r\n    };\r\n  \r\n    getAllPosts(query);\r\n  \r\n  }, [category]);\r\n  \r\n\r\n  return (\r\n\r\n    <>\r\n\r\n    {\r\n      Post && Post.length > 0 ? <div className=\"row\">\r\n      {Post.map((data,index)=>{\r\n      return <div className=\"col-md-4\" key={index}>\r\n        <PostsCard data={data} />\r\n      </div>\r\n    })}\r\n    </div> : <div style={{display:\"flex\" , justifyContent:\"center\" , textAlign:\"start\"}}> <h1 className='my-5'>No Current Blogs</h1> </div>\r\n    }\r\n    \r\n     \r\n\r\n    </>\r\n\r\n  );\r\n}\r\n// {\r\n//   Post && Post.length > 0 ?  Post.map((data , index)=>{\r\n\r\n//     return (\r\n\r\n//     )\r\n\r\n//   }) : <h1>No Data Available</h1>\r\n// }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE7B,MAAM,CAACD,IAAI,EAAGE,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACU,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,QAAQ,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAU,CAAC;EAE7Cb,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC;IACnD,MAAMC,KAAK,GAAG;MAAEL,QAAQ,EAAEA;IAAS,CAAC,CAAC,CAAC;;IAEtC,MAAMM,WAAW,GAAG,MAAOC,SAAS,IAAK;MACvC,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QACrDC,MAAM,EAAE,MAAM;QAAE;QAChBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAET;QACnB,CAAC;QACDU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS,CAAC,CAAE;MACnC,CAAC,CAAC;;MAEF,MAAMQ,GAAG,GAAG,MAAMP,IAAI,CAACQ,IAAI,CAAC,CAAC;MAC7B,IAAID,GAAG,CAACE,MAAM,KAAK,SAAS,EAAE;QAC5BnB,OAAO,CAACiB,GAAG,CAACG,IAAI,CAAC;MACnB;MACAC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,IAAI,CAAC;IACvB,CAAC;IAEDZ,WAAW,CAACD,KAAK,CAAC;EAEpB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAGd,oBAEEP,OAAA,CAAAE,SAAA;IAAA0B,QAAA,EAGEzB,IAAI,IAAIA,IAAI,CAAC0B,MAAM,GAAG,CAAC,gBAAG7B,OAAA;MAAK8B,SAAS,EAAC,KAAK;MAAAF,QAAA,EAC7CzB,IAAI,CAAC4B,GAAG,CAAC,CAAChB,IAAI,EAACiB,KAAK,KAAG;QACxB,oBAAOhC,OAAA;UAAK8B,SAAS,EAAC,UAAU;UAAAF,QAAA,eAC9B5B,OAAA,CAACH,SAAS;YAACkB,IAAI,EAAEA;UAAK;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADWJ,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEtC,CAAC;MACR,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,gBAAGpC,OAAA;MAAKqC,KAAK,EAAE;QAACC,OAAO,EAAC,MAAM;QAAGC,cAAc,EAAC,QAAQ;QAAGC,SAAS,EAAC;MAAO,CAAE;MAAAZ,QAAA,GAAC,GAAC,eAAA5B,OAAA;QAAI8B,SAAS,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC,gBAKrI,CAAC;AAGP;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AAAAhC,EAAA,CA5DwBD,IAAI;EAAA,QAGHL,eAAe;AAAA;AAAA2C,EAAA,GAHhBtC,IAAI;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}