{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachin singh\\\\OneDrive\\\\Desktop\\\\MDB\\\\Frontend\\\\src\\\\Component\\\\Blogs\\\\Post.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PostsCard from './PostsCard';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post() {\n  _s();\n  const [Post, setPost] = useState([]);\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get('category');\n  useEffect(() => {\n    const token = sessionStorage.getItem('accessToken');\n    const getAllPosts = async category => {\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/createPost/Post?category=${category}`, {\n          method: 'GET',\n          headers: {\n            Authorization: token\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data.status === \"Success\") {\n            setPost(data.post);\n          }\n        } else {\n          console.error(`Failed to fetch posts. Status code: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"An error occurred:\", error);\n      }\n    };\n    getAllPosts(category);\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Post && Post.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: Post.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(PostsCard, {\n            data: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"start\"\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-5\",\n        children: \"No Current Blogs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 91\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\n// {\n//   Post && Post.length > 0 ?  Post.map((data , index)=>{\n\n//     return (\n\n//     )\n\n//   }) : <h1>No Data Available</h1>\n// }\n_s(Post, \"AliY3NKaohUiglcIW+CfnDIr1H4=\", false, function () {\n  return [useSearchParams];\n});\n_c = Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","PostsCard","useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Post","_s","setPost","searchParams","category","get","token","sessionStorage","getItem","getAllPosts","response","fetch","method","headers","Authorization","ok","data","json","status","post","console","error","children","length","className","map","index","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Sachin singh/OneDrive/Desktop/MDB/Frontend/src/Component/Blogs/Post.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PostsCard from './PostsCard';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Post() {\r\n\r\n  const [Post , setPost] = useState([])\r\n  const [searchParams] = useSearchParams()\r\n  const category = searchParams.get('category')\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem('accessToken');\r\n  \r\n    const getAllPosts = async (category) => {\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:8000/createPost/Post?category=${category}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n  \r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.status === \"Success\") {\r\n            setPost(data.post);\r\n          }\r\n        } else {\r\n          console.error(`Failed to fetch posts. Status code: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred:\", error);\r\n      }\r\n    };\r\n  \r\n    getAllPosts(category);\r\n  \r\n  }, [category]);\r\n  \r\n\r\n  return (\r\n\r\n    <>\r\n\r\n    {\r\n      Post && Post.length > 0 ? <div className=\"row\">\r\n      {Post.map((data,index)=>{\r\n      return <div className=\"col-md-4\" key={index}>\r\n        <PostsCard data={data} />\r\n      </div>\r\n    })}\r\n    </div> : <div style={{display:\"flex\" , justifyContent:\"center\" , textAlign:\"start\"}}> <h1 className='my-5'>No Current Blogs</h1> </div>\r\n    }\r\n    \r\n     \r\n\r\n    </>\r\n\r\n  );\r\n}\r\n// {\r\n//   Post && Post.length > 0 ?  Post.map((data , index)=>{\r\n\r\n//     return (\r\n\r\n//     )\r\n\r\n//   }) : <h1>No Data Available</h1>\r\n// }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}